{"ast":null,"code":"var _jsxFileName = \"/Users/khaled/PycharmProjects/django-react-tic-tac-toe/frontend/src/components/scoreboard.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nexport class Scoreboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      const li = [];\n      axios.get('http://localhost:8000/api/scoreboard/').then(response => {\n        Promise.all(response.data.map(historyItem => {\n          return li.push([historyItem.player_name, historyItem.score]);\n        }));\n        this.setState({\n          scoreboard: li\n        });\n      });\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      let stateKey = event.target.dataset.name;\n      let stateValue = event.target.value;\n      this.setState({\n        [stateKey]: stateValue\n      });\n      this.props.nameChangeHandler(stateKey, stateValue);\n    };\n\n    this.handleNameValidation = event => {\n      if (this.state.playerOneName.length !== 0 && this.state.playerTwoName.length !== 0) {\n        return;\n      } else {\n        event.preventDefault();\n      }\n    };\n\n    this.state = {\n      playerOneName: this.props.state.playerOneName,\n      playerTwoName: this.props.state.playerTwoName,\n      scoreboard: []\n    };\n  }\n\n  async componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"view view--scoreboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"scoreboard__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Tic Tac Toe\"), React.createElement(\"h2\", {\n      className: \"scoreboard__subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Would you like to play a game?\"), React.createElement(\"div\", {\n      className: \"scoreboard__names\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scoreboard__name-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"playerOneName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Player one name (x):\"), React.createElement(\"input\", {\n      id: \"playerOneName\",\n      className: \"scoreboard__input\",\n      type: \"text\",\n      value: this.state.playerOneName,\n      onChange: this.handleInputChange,\n      \"data-name\": \"playerOneName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"scoreboard__name-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"playerTwoName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Player two name (o):\"), React.createElement(\"input\", {\n      id: \"playerTwoName\",\n      className: \"scoreboard__input\",\n      type: \"text\",\n      value: this.state.playerTwoName,\n      onChange: this.handleInputChange,\n      \"data-name\": \"playerTwoName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/board\",\n      onClick: this.handleNameValidation,\n      className: \"scoreboard__btn btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Start new game aganist AI\"), React.createElement(\"h2\", {\n      className: \"scoreboard__subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"scoreboard:\"), this.state.scoreboard.length === 0 && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"There are no previous games to show.\"), this.state.scoreboard.length !== 0 && React.createElement(\"ul\", {\n      className: \"scoreboard__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"center\",\n      id: \"scoreboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"player\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"score\"), this.state.scoreboard.map((leader, key) => {\n      return React.createElement(\"tr\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, leader[0]), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, leader[1]));\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/khaled/PycharmProjects/django-react-tic-tac-toe/frontend/src/components/scoreboard.jsx"],"names":["React","Link","axios","Scoreboard","Component","constructor","props","refreshList","li","get","then","response","Promise","all","data","map","historyItem","push","player_name","score","setState","scoreboard","handleInputChange","event","preventDefault","stateKey","target","dataset","name","stateValue","value","nameChangeHandler","handleNameValidation","state","playerOneName","length","playerTwoName","componentDidMount","render","leader","key"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nexport class Scoreboard extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\t\t\tplayerOneName: this.props.state.playerOneName,\n\t\t\tplayerTwoName: this.props.state.playerTwoName,\n      scoreboard: []\n    }\n  }\n\n  async componentDidMount() {\n    this.refreshList()\n  }\n\n  refreshList = () => {\n    const li = []\n    axios.get('http://localhost:8000/api/scoreboard/')\n      .then(response => {\n        Promise.all(response.data.map((historyItem) => {\n          return li.push([historyItem.player_name, historyItem.score])}));\n    \n    this.setState({scoreboard: li})\n    })\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n\n    let stateKey = event.target.dataset.name\n    let stateValue = event.target.value\n\n    this.setState({\n      [stateKey]: stateValue\n    })\n\n    this.props.nameChangeHandler(stateKey, stateValue)\n  }\n\n  handleNameValidation = (event) => {\n    if (this.state.playerOneName.length !== 0 && this.state.playerTwoName.length !== 0) {\n      return\n    } else {\n      event.preventDefault()\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"view view--scoreboard\">\n        <h1 className=\"scoreboard__title\">Tic Tac Toe</h1>\n\n        <h2 className=\"scoreboard__subtitle\">Would you like to play a game?</h2>\n\n        <div className=\"scoreboard__names\">\n          <div className=\"scoreboard__name-box\">\n            <label htmlFor=\"playerOneName\">Player one name (x):</label>\n\n            <input id=\"playerOneName\" className=\"scoreboard__input\" type=\"text\" value={this.state.playerOneName} onChange={this.handleInputChange} data-name=\"playerOneName\" />\n          </div>\n\n          <div className=\"scoreboard__name-box\">\n            <label htmlFor=\"playerTwoName\">Player two name (o):</label>\n\n            <input id=\"playerTwoName\" className=\"scoreboard__input\" type=\"text\" value={this.state.playerTwoName} onChange={this.handleInputChange} data-name=\"playerTwoName\" />\n          </div>\n        </div>\n\n        <Link to=\"/board\" onClick={this.handleNameValidation} className=\"scoreboard__btn btn\">Start new game aganist AI</Link>\n\n        <h2 className=\"scoreboard__subtitle\">scoreboard:</h2>\n\n        {this.state.scoreboard.length === 0 && <p>There are no previous games to show.</p>}\n\n        {this.state.scoreboard.length !== 0 && <ul className=\"scoreboard__list\">\n        <table class=\"center\" id='scoreboard'>\n               <tbody>\n               <th>player</th>\n               <th>score</th>\n               {this.state.scoreboard.map((leader, key) => {\n              \n                return <tr key={key}>\n                  <td>{leader[0]}</td>\n                  <td>{leader[1]}</td>\n               \n                      </tr>\n                })}\n               </tbody>\n            </table>\n\n        </ul>}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}