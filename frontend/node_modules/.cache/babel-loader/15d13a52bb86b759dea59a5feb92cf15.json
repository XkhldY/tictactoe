{"ast":null,"code":"var _jsxFileName = \"/Users/khaled/PycharmProjects/django-react-tic-tac-toe/frontend/src/components/BoardTwoPlayers.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box } from './board-box';\nimport * as utils from '../utils/functions';\nexport class BoardTwoPlayers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBoardRestart = () => {\n      this.setState({\n        boxes: Array(9).fill(null),\n        history: [],\n        xIsNext: true\n      });\n    };\n\n    this.state = {\n      boxes: Array(9).fill(null),\n      history: [],\n      playerOneName: this.props.state.playerOneName,\n      playerTwoName: this.props.state.playerTwoName,\n      xIsNext: true\n    };\n  }\n\n  handleBoxClick(index) {\n    const boxes = this.state.boxes.slice();\n    let history = this.state.history; // axios.get('http://localhost:8000/api/tictac/historys/')\n\n    if (utils.findWinner(boxes) || boxes[index]) {\n      return;\n    }\n\n    if (utils.areAllBoxesClicked(boxes) === true) {\n      return;\n    }\n\n    boxes[index] = this.state.xIsNext ? 'x' : 'o';\n    history.push(this.state.xIsNext ? this.state.playerOneName : this.state.playerTwoName);\n    this.setState({\n      boxes: this.state.boxes,\n      history: history,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const winner = utils.findWinner(this.state.boxes);\n    const isFilled = utils.areAllBoxesClicked(this.state.boxes);\n    let status;\n\n    if (winner) {\n      status = \"The winner is: \".concat(winner === 'x' ? this.state.playerOneName : this.state.playerTwoName, \"!\");\n      axios.post('http://localhost:8000/api/tictac/historys/', {\n        title: \"\".concat(winner === 'x' ? this.state.playerOneName : this.state.playerTwoName, \" won\"),\n        text: ''\n      });\n    } else if (!winner && isFilled) {\n      status = 'Game drawn!';\n      axios.post('http://localhost:8000/api/tictac/historys/', {\n        title: 'Game drawn',\n        text: ''\n      });\n    } else {\n      status = \"It is \".concat(this.state.xIsNext ? this.state.playerOneName : this.state.playerTwoName, \"'s turn.\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"view view--board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"board-back-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Go back to scoreboard\"), React.createElement(\"div\", {\n      className: \"board-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"board-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Box, {\n      value: this.state.boxes[0],\n      onClick: () => this.handleBoxClick(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[1],\n      onClick: () => this.handleBoxClick(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[2],\n      onClick: () => this.handleBoxClick(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Box, {\n      value: this.state.boxes[3],\n      onClick: () => this.handleBoxClick(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[4],\n      onClick: () => this.handleBoxClick(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[5],\n      onClick: () => this.handleBoxClick(5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Box, {\n      value: this.state.boxes[6],\n      onClick: () => this.handleBoxClick(6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[7],\n      onClick: () => this.handleBoxClick(7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[8],\n      onClick: () => this.handleBoxClick(8),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"board-history\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"board-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Moves history:\"), React.createElement(\"ul\", {\n      className: \"board-history-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.history.length === 0 && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"No moves to show.\"), this.state.history.length !== 0 && this.state.history.map((move, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Move \", index + 1, \": \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, move));\n    }))), winner && React.createElement(\"button\", {\n      className: \"board__btn btn\",\n      onClick: this.handleBoardRestart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Start new game\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/khaled/PycharmProjects/django-react-tic-tac-toe/frontend/src/components/BoardTwoPlayers.jsx"],"names":["React","Link","axios","Box","utils","BoardTwoPlayers","Component","constructor","props","handleBoardRestart","setState","boxes","Array","fill","history","xIsNext","state","playerOneName","playerTwoName","handleBoxClick","index","slice","findWinner","areAllBoxesClicked","push","render","winner","isFilled","status","post","title","text","length","map","move"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nimport { Box } from './board-box'\n\nimport * as utils from '../utils/functions'\n\nexport class BoardTwoPlayers extends React.Component {\n\t\n\tconstructor(props) {\n    super(props)\n\t\t\n\t\tthis.state = {\n\t\t\tboxes: Array(9).fill(null),\n\t\t\thistory: [],\n\t\t\tplayerOneName: this.props.state.playerOneName,\n\t\t\tplayerTwoName: this.props.state.playerTwoName,\n\t\t\txIsNext: true\n\t\t}\n\t}\n\n\thandleBoxClick(index) {\n\t\tconst boxes = this.state.boxes.slice()\n\n\n\t\tlet history = this.state.history\n\t\t// axios.get('http://localhost:8000/api/tictac/historys/')\n\n\n\t\tif (utils.findWinner(boxes) || boxes[index]) {\n\t\t\treturn\n\t\t}\n\n\t\tif(utils.areAllBoxesClicked(boxes) === true) {\n\t\t\treturn\n\t\t}\n\n\t\tboxes[index] = this.state.xIsNext ? 'x' : 'o'\n\n\n\t\thistory.push(this.state.xIsNext ? this.state.playerOneName : this.state.playerTwoName)\n\n\t\tthis.setState({\n\t\t\t\tboxes: this.state.boxes,\n\t\t\t\thistory: history,\n\t\t\t\txIsNext: !this.state.xIsNext\n\t\t\t})\n\t\t\n\t\t\n\t}\n\n\thandleBoardRestart = () => {\n\t\tthis.setState({\n\t\t\tboxes: Array(9).fill(null),\n\t\t\thistory: [],\n\t\t\txIsNext: true\n\t\t})\n\t}\n\n\trender() {\n    const winner = utils.findWinner(this.state.boxes)\n    const isFilled = utils.areAllBoxesClicked(this.state.boxes)\n\n    let status\n\n\t\tif (winner) {\n\t\t\tstatus = `The winner is: ${winner === 'x' ? this.state.playerOneName : this.state.playerTwoName}!`\n\n\t\t\taxios.post('http://localhost:8000/api/tictac/historys/', {title: `${winner === 'x' ? this.state.playerOneName : this.state.playerTwoName} won`, text: ''})\n\t\t} else if(!winner && isFilled) {\n\t\t\tstatus = 'Game drawn!'\n\n\t\t\taxios.post('http://localhost:8000/api/tictac/historys/', {title: `${'Game drawn'}`, text: ''})\n\t\t} else {\n\t\t\tstatus = `It is ${(this.state.xIsNext ? this.state.playerOneName : this.state.playerTwoName)}'s turn.`\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"view view--board\">\n\t\t\t\t<Link to=\"/\" className=\"board-back-link\">Go back to scoreboard</Link>\n\n\t\t\t\t<div className=\"board-wrapper\">\n\t\t\t\t\t<div className=\"board\">\n\t\t\t\t\t\t<h2 className=\"board-heading\">{status}</h2>\n\n\t\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t\t<Box value={this.state.boxes[0]} onClick={() => this.handleBoxClick(0)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[1]} onClick={() => this.handleBoxClick(1)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[2]} onClick={() => this.handleBoxClick(2)} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t\t<Box value={this.state.boxes[3]} onClick={() => this.handleBoxClick(3)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[4]} onClick={() => this.handleBoxClick(4)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[5]} onClick={() => this.handleBoxClick(5)} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t\t<Box value={this.state.boxes[6]} onClick={() => this.handleBoxClick(6)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[7]} onClick={() => this.handleBoxClick(7)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[8]} onClick={() => this.handleBoxClick(8)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"board-history\">\n\t\t\t\t\t\t<h2 className=\"board-heading\">Moves history:</h2>\n\n\t\t\t\t\t\t<ul className=\"board-history-list\">\n\t\t\t\t\t\t\t{this.state.history.length === 0 && <span>No moves to show.</span>}\n\n\t\t\t\t\t\t\t{this.state.history.length !== 0 && this.state.history.map((move, index) => {\n\t\t\t\t\t\t\t\treturn <li key={index}>Move {index + 1}: <strong>{move}</strong></li>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{winner && <button className=\"board__btn btn\" onClick={this.handleBoardRestart}>Start new game</button>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}