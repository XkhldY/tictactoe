{"ast":null,"code":"var _jsxFileName = \"/Users/khaled/PycharmProjects/django-react-tic-tac-toe/frontend/src/components/board.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box } from './board-box';\nimport * as utils from '../utils/functions';\nexport class Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBoardRestart = () => {\n      this.setState({\n        boxes: Array(9).fill(null),\n        xIsNext: true\n      });\n    };\n\n    this.state = {\n      boxes: Array(9).fill(null),\n      playerOneName: this.props.state.playerOneName,\n      playerTwoName: this.props.state.playerTwoName,\n      xIsNext: true\n    };\n  }\n\n  handleBoxClick(index) {\n    const boxes = this.state.boxes.slice();\n\n    if (utils.findWinner(boxes) || boxes[index]) {\n      return;\n    }\n\n    if (utils.areAllBoxesClicked(boxes) === true) {\n      return;\n    }\n\n    boxes[index] = 'x';\n    this.setState({\n      boxes: this.state.boxes,\n      xIsNext: !this.state.xIsNext\n    });\n    const dic = {};\n    boxes.forEach((elm, index) => {\n      dic[index] = elm;\n    });\n    let st = JSON.stringify(dic);\n    const bodyParameters = {\n      current_board: st\n    };\n    axios.post('http://localhost:8000/api/board/', bodyParameters //   config\n    ).then(response => {\n      this.setState({\n        boxes: response.data\n      });\n    });\n  }\n\n  render() {\n    const winner = utils.findWinner(this.state.boxes);\n    const isFilled = utils.areAllBoxesClicked(this.state.boxes);\n    let status;\n\n    if (winner) {\n      status = \"The winner is: \".concat(winner === 'x' ? this.state.playerOneName : this.state.playerTwoName, \"!\");\n      axios.post('http://localhost:8000/api/scoreboard/', {\n        player_name: \"\".concat(winner === 'x' ? this.state.playerOneName : this.state.playerTwoName)\n      });\n    } else if (!winner && isFilled) {\n      status = 'Game drawn!';\n    } else {\n      status = \"It is \".concat(this.state.xIsNext ? this.state.playerOneName : this.state.playerTwoName, \"'s turn.\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"view view--board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"board-back-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Go back to scoreboard\"), React.createElement(\"div\", {\n      className: \"board-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"board-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Box, {\n      value: this.state.boxes[0],\n      onClick: () => this.handleBoxClick(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[1],\n      onClick: () => this.handleBoxClick(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[2],\n      onClick: () => this.handleBoxClick(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Box, {\n      value: this.state.boxes[3],\n      onClick: () => this.handleBoxClick(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[4],\n      onClick: () => this.handleBoxClick(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[5],\n      onClick: () => this.handleBoxClick(5),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Box, {\n      value: this.state.boxes[6],\n      onClick: () => this.handleBoxClick(6),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[7],\n      onClick: () => this.handleBoxClick(7),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Box, {\n      value: this.state.boxes[8],\n      onClick: () => this.handleBoxClick(8),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))), winner && React.createElement(\"button\", {\n      className: \"board__btn btn\",\n      onClick: this.handleBoardRestart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Start new game\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/khaled/PycharmProjects/django-react-tic-tac-toe/frontend/src/components/board.jsx"],"names":["React","Link","axios","Box","utils","Board","Component","constructor","props","handleBoardRestart","setState","boxes","Array","fill","xIsNext","state","playerOneName","playerTwoName","handleBoxClick","index","slice","findWinner","areAllBoxesClicked","dic","forEach","elm","st","JSON","stringify","bodyParameters","current_board","post","then","response","data","render","winner","isFilled","status","player_name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nimport { Box } from './board-box'\n\nimport * as utils from '../utils/functions'\n\nexport class Board extends React.Component {\n\t\n\tconstructor(props) {\n    super(props)\n\t\t\n\t\tthis.state = {\n\t\t\tboxes: Array(9).fill(null),\n\t\t\tplayerOneName: this.props.state.playerOneName,\n\t\t\tplayerTwoName: this.props.state.playerTwoName,\n\t\t\txIsNext: true\n\t\t}\n\t}\n\n\thandleBoxClick(index) {\n\t\tconst boxes = this.state.boxes.slice()\n\n\t\tif (utils.findWinner(boxes) || boxes[index]) {\n\t\t\treturn\n\t\t}\n\n\t\tif(utils.areAllBoxesClicked(boxes) === true) {\n\t\t\treturn\n\t\t}\n\t\tboxes[index] = 'x'\n\n\t\tthis.setState({\n\t\t\t\tboxes: this.state.boxes,\n\t\t\t\txIsNext: !this.state.xIsNext\n\t\t\t})\n\t\t\n\n\t\tconst dic = {};\n\t\tboxes.forEach((elm, index) => {dic[index] = elm})\n\t\tlet st = JSON.stringify(dic)\n\t\tconst bodyParameters = {current_board: st};\n\t\t\n\t\taxios.post( \n\t\t'http://localhost:8000/api/board/',\n\t\t\tbodyParameters,\n\t\t//   config\n\t\t).then(response => {this.setState({boxes: response.data})})\n\t\t\n\t}\n\n\t\n\thandleBoardRestart = () => {\n\t\tthis.setState({\n\t\t\tboxes: Array(9).fill(null),\n\t\t\txIsNext: true\n\t\t})\n\t}\n\n\trender() {\n    const winner = utils.findWinner(this.state.boxes)\n    const isFilled = utils.areAllBoxesClicked(this.state.boxes)\n\n    let status\n\n\t\tif (winner) {\n\t\t\tstatus = `The winner is: ${winner === 'x' ? this.state.playerOneName : this.state.playerTwoName}!`\n\n\t\t\taxios.post('http://localhost:8000/api/scoreboard/', {player_name: `${winner === 'x' ? this.state.playerOneName : this.state.playerTwoName}`})\n\t\t} else if(!winner && isFilled) {\n\t\t\tstatus = 'Game drawn!'\n\n\t\t} else {\n\t\t\tstatus = `It is ${(this.state.xIsNext ? this.state.playerOneName : this.state.playerTwoName)}'s turn.`\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"view view--board\">\n\t\t\t\t<Link to=\"/\" className=\"board-back-link\">Go back to scoreboard</Link>\n\n\t\t\t\t<div className=\"board-wrapper\">\n\t\t\t\t\t<h2 className=\"board-heading\">{status}</h2>\n\t\t\t\t\t<div className=\"board\">\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t\t<Box value={this.state.boxes[0]} onClick={() => this.handleBoxClick(0)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[1]} onClick={() => this.handleBoxClick(1)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[2]} onClick={() => this.handleBoxClick(2)} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t\t<Box value={this.state.boxes[3]} onClick={() => this.handleBoxClick(3)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[4]} onClick={() => this.handleBoxClick(4)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[5]} onClick={() => this.handleBoxClick(5)} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t\t\t<Box value={this.state.boxes[6]} onClick={() => this.handleBoxClick(6)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[7]} onClick={() => this.handleBoxClick(7)} />\n\n\t\t\t\t\t\t\t<Box value={this.state.boxes[8]} onClick={() => this.handleBoxClick(8)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* <div className=\"board-history\">\n\t\t\t\t\t\t<h2 className=\"board-heading\">Moves history:</h2>\n\n\t\t\t\t\t\t<ul className=\"board-history-list\">\n\t\t\t\t\t\t\t{this.state.history.length === 0 && <span>No moves to show.</span>}\n\n\t\t\t\t\t\t\t{this.state.history.length !== 0 && this.state.history.map((move, index) => {\n\t\t\t\t\t\t\t\treturn <li key={index}>Move {index + 1}: <strong>{move}</strong></li>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div> */}\n\n\t\t\t\t</div>\n\t\t\t\t{winner && <button className=\"board__btn btn\" onClick={this.handleBoardRestart}>Start new game</button>}\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}